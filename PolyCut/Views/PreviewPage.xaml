<Page x:Class="PreviewPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
      xmlns:local="clr-namespace:PolyCut"
      d:DataContext="{d:DesignInstance Type=local:MainViewModel}"
      xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
      xmlns:c="clr-namespace:ValueConverters;assembly=ValueConverters"
      xmlns:svg="http://sharpvectors.codeplex.com/runtime/"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      mc:Ignorable="d"
      Background="{DynamicResource ControlFillColorTertiaryBrush}"
      ScrollViewer.CanContentScroll="False"
      d:DesignHeight="800"
      d:DesignWidth="800"
      Margin="0,5,0,0"
      Title="ExportPage">
  <Page.Resources>
    <local:ZoomFactorToThicknessConverter x:Key="ZoomFactorToThicknessConverter" />
    <c:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <local:InputToMillimetresConverter x:Key="UnitConverter" />
    <local:AnimationFactorToValueConverter x:Key="AnimationFactorToValueConverter" />
    <local:InverseBoolToVisConverter x:Key="InverseBoolToVisConverter" />
    <local:NullableIntConverter x:Key="NullableIntConverter" />
    <c:StringToObjectConverter x:Key="StringtoObjConverter" />

  </Page.Resources>
  <Grid  Margin="5,5,10,5">

    <Grid.RowDefinitions>
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*" />
      <ColumnDefinition Width="380"
                        MinWidth="380"
                        MaxWidth="800" />
    </Grid.ColumnDefinitions>
    <GridSplitter Width="5"
                  Background="Transparent"
                  IsTabStop="False"
                  ResizeDirection="Columns"
                  Panel.ZIndex="1" />

    <local:ZoomBorder  x:Name="zoomPanControl"
                          Background="Transparent"
                           RightButtonAction="Reset"
                       LeftButtonAction="None"
                       ScaleMax="40"
                       ScaleAmount="0.002"
                       MiddleButtonAction="Move"
                           ClipToBounds="True">
          <Grid x:Name="outerBounds"
                Height="500"
                Width="500"
                Background="Transparent"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">

           
              <Grid>

                <Canvas  Margin="0,0,0,0"
                         x:Name="mainCanvas"
                         Width="{Binding Printer.BedWidth, Mode=TwoWay}"
                         Height="{Binding Printer.BedHeight, Mode=TwoWay}"
                         Background="Transparent">

                  <Border x:Name="CuttingMatBounds"
                    ClipToBounds="True"
                    Background="{StaticResource LayerFillColorDefaultBrush}"
                    Width="{Binding Printer.BedWidth, Mode=TwoWay}"
                          Height="{Binding Printer.BedHeight, Mode=TwoWay}">

                    <svgc:SvgCanvas x:Name="CuttingMat"
                                    Visibility="{Binding ElementName=CuttingMatVisibilityToggle, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}"
                                    HorizontalAlignment="{Binding CuttingMat.SelectedHorizontalAlignment}"
                                    VerticalAlignment="{Binding CuttingMat.SelectedVerticalAlignment}"
                                    Source="{Binding CuttingMat.QualifiedSVGSource}">
                      <svgc:SvgCanvas.RenderTransform>
                        <TransformGroup>
                          <RotateTransform Angle="{Binding CuttingMat.SelectedRotation}" />
                          <TranslateTransform x:Name="CuttingMat_RenderTransform"
                                              X="0"
                                              Y="0" />
                        </TransformGroup>
                      </svgc:SvgCanvas.RenderTransform>
                    </svgc:SvgCanvas>

                  </Border>

                  <ItemsControl x:Name="mainC"
                                ItemsSource="{Binding GCodePaths, Mode=TwoWay}"
                                Width="{Binding Printer.BedWidth, Mode=TwoWay}"
                                Height="{Binding Printer.BedHeight, Mode=TwoWay}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <Grid />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
              <ItemsControl.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleY="-1" />
                  <TranslateTransform Y="{Binding Printer.BedHeight}" />

                </TransformGroup>
              </ItemsControl.RenderTransform>

                  </ItemsControl>

                </Canvas>
          <Grid Margin="0,0,0,0"
                Background="Transparent"
                Width="{Binding Printer.BedWidth, Mode=TwoWay, FallbackValue=235}"
                Panel.ZIndex="-1"
                Height="{Binding Printer.BedHeight, Mode=TwoWay, FallbackValue=235}">

            <Grid.Effect>
              <BlurEffect Radius="3"
                          RenderingBias="Quality" />
            </Grid.Effect>

            <Border Height="4"
                    Margin="0,0,-2,-4"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom">
              <Border.Background>
                <LinearGradientBrush StartPoint="0.5, 0"
                                     EndPoint="0.5,1">
                  <GradientStop Color="#FF000000"
                                Offset="0" />
                  <GradientStop Color="#00000000"
                                Offset="0.8" />
                </LinearGradientBrush>
              </Border.Background>

            </Border>
            <Border Width="4"
                    Margin="0,0,-4,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Stretch">
              <Border.Background>
                <LinearGradientBrush StartPoint="0, 0.5"
                                     EndPoint="1,0.5">
                  <GradientStop Color="#FF000000"
                                Offset="0" />
                  <GradientStop Color="#00000000"
                                Offset="1" />
                </LinearGradientBrush>
              </Border.Background>
            </Border>
          </Grid>
        </Grid>

           

          </Grid>

        </local:ZoomBorder>

  

      <ui:Card Grid.Column="1"
               Margin="5,5,0,5"
               VerticalAlignment="Stretch"
               VerticalContentAlignment="Top">
        <ui:Card.Background>
          <SolidColorBrush Color="{StaticResource CardBackgroundFillColorDefault}" />
        </ui:Card.Background>

        <Grid>

          <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />

          </Grid.RowDefinitions>

          <StackPanel Orientation="Horizontal"
                      Margin="0,10,0,10">

            <ToggleButton x:Name="CuttingMatVisibilityToggle"
                          IsChecked="True">
              <ToggleButton.Template>
                <ControlTemplate>
                  <ContentControl>
                    <ContentControl.Style>
                      <Style TargetType="ContentControl">
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                       Value="True">
                            <Setter Property="Content">
                              <Setter.Value>
                                <ui:Card BorderBrush="{StaticResource PaletteBlueBrush}"
                                         Padding="8,4"
                                         Background="Transparent">
                                  <ui:SymbolIcon Symbol="Eye24" />
                                </ui:Card>
                              </Setter.Value>
                            </Setter>

                          </DataTrigger>
                          <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                       Value="False">
                            <Setter Property="Content">
                              <Setter.Value>
                                <ui:Card BorderBrush="{StaticResource ControlFillColorSecondaryBrush}"
                                         Padding="8,4"
                                         Background="Transparent">
                                  <!-- Replace with your unchecked icon -->
                                  <ui:SymbolIcon Symbol="EyeOff24" />
                                </ui:Card>
                              </Setter.Value>
                            </Setter>
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </ContentControl.Style>
                  </ContentControl>
                </ControlTemplate>
              </ToggleButton.Template>
            </ToggleButton>
            <Label Content="Cutting Mat"
                   Margin="10,4,10,0" />

          </StackPanel>
          <StackPanel Grid.Row="1"
                      Orientation="Horizontal"
                      Margin="0,10,0,10">

            <ToggleButton x:Name="TravelMovesVisibilityToggle"
                          IsChecked="True">
              <ToggleButton.Template>
                <ControlTemplate>
                  <ContentControl>
                    <ContentControl.Style>
                      <Style TargetType="ContentControl">
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                       Value="True">
                            <Setter Property="Content">
                              <Setter.Value>
                                <ui:Card BorderBrush="{StaticResource PaletteBlueBrush}"
                                         Padding="8,4"
                                         Background="Transparent">
                                  <ui:SymbolIcon Symbol="Eye24" />
                                </ui:Card>
                              </Setter.Value>
                            </Setter>

                          </DataTrigger>
                          <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                       Value="False">
                            <Setter Property="Content">
                              <Setter.Value>
                                <ui:Card BorderBrush="{StaticResource ControlFillColorSecondaryBrush}"
                                         Padding="8,4"
                                         Background="Transparent">
                                  <!-- Replace with your unchecked icon -->
                                  <ui:SymbolIcon Symbol="EyeOff24" />
                                </ui:Card>
                              </Setter.Value>
                            </Setter>
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </ContentControl.Style>
                  </ContentControl>
                </ControlTemplate>
              </ToggleButton.Template>
            </ToggleButton>
            <Label Content="Travel Moves"
                   Margin="10,4,10,0" />

          </StackPanel>
          <Button x:Name="previewTools"
                  Grid.Row="2"
                  Content="Preview Toolpath"
                  Margin="0,10,0,10"
                  Click="PreviewToolpath" />

          <Label Content="GCode"
                 Grid.Row="3" />

          <ScrollViewer Grid.Row="4"
                        HorizontalScrollBarVisibility="Visible"
                        BorderThickness="3"
                        Margin="0,10,10,0"
                        Padding="0,-5,-5,10"
                        SnapsToDevicePixels="True">
            <TextBox Text="{Binding GCode}"
                     FontFamily="Consolas"
                     Grid.Row="2"
                     Opacity="0.8"
                     IsReadOnly="True"
                     IsReadOnlyCaretVisible="True"
                     Padding="10,10,0,0"
                     Margin="0" />
          </ScrollViewer>

        </Grid>

      </ui:Card>

    </Grid>

</Page>
