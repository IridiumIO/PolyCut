<Page x:Class="SVGPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:c="clr-namespace:ValueConverters;assembly=ValueConverters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors" xmlns:local="clr-namespace:PolyCut"
      xmlns:polycutShared="clr-namespace:PolyCut.Shared;assembly=PolyCut.Shared"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:pc="clr-namespace:PolyCut.Core;assembly=PolyCut.Core"
      xmlns:rc="clr-namespace:PolyCut.RichCanvas;assembly=PolyCut.RichCanvas"
      xmlns:svg="http://sharpvectors.codeplex.com/runtime/"
      xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
      xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
      x:Name="SVGPageView" Title="SVGPage" Unloaded="SVGPageView_Unloaded"
      Margin="0,5,0,0" Drop="Page_Drop"
      d:DataContext="{d:DesignInstance Type=local:SVGPageViewModel}"
      d:DesignHeight="1000" d:DesignWidth="1000" AllowDrop="True"
      Background="{DynamicResource ControlFillColorTertiaryBrush}"
      ScrollViewer.CanContentScroll="False"
      mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded" SourceObject="{Binding ElementName=SVGPageView}">
            <i:InvokeCommandAction Command="{Binding MainVM.MainViewLoadedCommand}" />
        </i:EventTrigger>
        <i:KeyTrigger Key="Delete" SourceObject="{Binding ElementName=zoomPanControl}">
            <i:InvokeCommandAction Command="{Binding MainVM.DeleteDrawableElementCommand}" />
        </i:KeyTrigger>
        <i:KeyTrigger Key="OemCloseBrackets" SourceObject="{Binding ElementName=zoomPanControl}">
            <i:InvokeCommandAction Command="{Binding PreviewKeyDownCommand}" CommandParameter="]" />
        </i:KeyTrigger>
        <i:KeyTrigger Key="OemOpenBrackets" SourceObject="{Binding ElementName=zoomPanControl}">
            <i:InvokeCommandAction Command="{Binding PreviewKeyDownCommand}" CommandParameter="[" />
        </i:KeyTrigger>
    </i:Interaction.Triggers>
    <Page.Resources>
        <local:ZoomFactorToThicknessConverter x:Key="ZoomFactorToThicknessConverter" />
        <c:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <local:InputToMillimetresConverter x:Key="UnitConverter" />
        <local:AnimationFactorToValueConverter x:Key="AnimationFactorToValueConverter" />
        <local:InverseBoolToVisConverter x:Key="InverseBoolToVisConverter" />
        <local:NullableIntConverter x:Key="NullableIntConverter" />
        <local:RadioButtonConverter x:Key="RadioButtonConverter" />
        <local:PathTrimmerConverter x:Key="PathTrimmerConverter" />
        <local:InverseBoolConverter x:Key="InverseBoolConverter" />
        <local:ComparisonConverter x:Key="ComparisonConverter" />
        <local:CanvasToolModeCursorConverter x:Key="CanvasToolModeCursorConverter" />
        <Style x:Key="CustomCardExpanderStyle"
               BasedOn="{StaticResource DefaultUiCardExpanderStyle}"
               TargetType="{x:Type ui:CardExpander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ui:CardExpander}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!--  Top level controls always visible  -->
                            <Border x:Name="ToggleButtonBorder"
                                    Grid.Row="0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="{TemplateBinding CornerRadius}">
                                <ToggleButton x:Name="ExpanderToggleButton"
                                              Margin="0"
                                              Padding="{TemplateBinding Padding}"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center"
                                              FontSize="{TemplateBinding FontSize}"
                                              Foreground="{TemplateBinding Foreground}"
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              IsEnabled="{TemplateBinding IsEnabled}"
                                              OverridesDefaultStyle="True"
                                              Template="{StaticResource DefaultUiCardExpanderToggleButtonStyle}">
                                    <ToggleButton.Content>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <ContentControl x:Name="ControlIcon"
                                                            Content="{TemplateBinding Icon}"
                                                            Grid.Column="0"
                                                            Margin="{StaticResource CardExpanderIconMargin}"
                                                            VerticalAlignment="Center"
                                                            Focusable="False"
                                                            FontSize="{StaticResource CardExpanderIconSize}"
                                                            Foreground="{TemplateBinding Foreground}"
                                                            KeyboardNavigation.IsTabStop="False" />

                                            <ContentPresenter x:Name="HeaderContentPresenter"
                                                              Content="{TemplateBinding Header}"
                                                              Grid.Column="1"
                                                              TextElement.Foreground="{TemplateBinding Foreground}" />
                                        </Grid>
                                    </ToggleButton.Content>
                                </ToggleButton>
                            </Border>

                            <!--  Collapsed content to expand  -->
                            <Grid Grid.Row="1" ClipToBounds="True">
                                <Border x:Name="ContentPresenterBorder"
                                        Background="Transparent"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1,0,1,1" CornerRadius="0,0,4,4" Visibility="Collapsed">
                                    <ContentPresenter x:Name="ContentPresenter"
                                                      Content="{TemplateBinding Content}"
                                                      Margin="{TemplateBinding ContentPadding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <Border.Tag>
                                        <system:Double>0.0</system:Double>
                                    </Border.Tag>
                                    <Border.RenderTransform>
                                        <TranslateTransform>
                                            <TranslateTransform.Y>
                                                <MultiBinding Converter="{StaticResource AnimationFactorToValueConverter}" ConverterParameter="negative">
                                                    <Binding ElementName="ContentPresenterBorder" Path="ActualHeight" />
                                                    <Binding ElementName="ContentPresenterBorder" Path="Tag" />
                                                </MultiBinding>
                                            </TranslateTransform.Y>
                                        </TranslateTransform>
                                    </Border.RenderTransform>
                                </Border>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <!--  TODO: Update  -->
                                <Setter TargetName="ToggleButtonBorder" Property="CornerRadius" Value="4,4,0,0" />
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="(Border.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="Tag">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="1.0" />
                                                <SplineDoubleKeyFrame KeySpline="0.0, 0.0, 0.0, 1.0" KeyTime="0:0:0.333"
                                                                      Value="0.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="(Border.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="Tag">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0.0" />
                                                <SplineDoubleKeyFrame KeySpline="1.0, 1.0, 0.0, 1.0" KeyTime="0:0:0.167"
                                                                      Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource CardBackgroundDisabled}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource CardBorderBrushDisabled}" />
                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource CardForegroundDisabled}" />
                                <Setter TargetName="ExpanderToggleButton" Property="Foreground" Value="{DynamicResource CardForegroundDisabled}" />
                            </Trigger>
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter TargetName="ControlIcon" Property="Margin" Value="0" />
                                <Setter TargetName="ControlIcon" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CustomTabStyle"
               BasedOn="{StaticResource {x:Type TabItem}}"
               TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="Root">
                            <Rectangle x:Name="selectedHighlight"
                                       Width="20" Height="3"
                                       HorizontalAlignment="Center" VerticalAlignment="Bottom" Panel.ZIndex="1"
                                       Fill="{StaticResource PaletteBlueBrush}"
                                       Visibility="Hidden" />
                            <Border x:Name="Border"
                                    MinWidth="80" MinHeight="40"
                                    Margin="0" Padding="6"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,1,1,0" CornerRadius="8,8,0,0">
                                <ContentPresenter x:Name="ContentSite"
                                                  Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                  ContentSource="Header" RecognizesAccessKey="True" />
                            </Border>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected" />

                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Border"
                                                             Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" From="0.0"
                                                             To="0.5" Duration="0:0:.16" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter Property="Foreground" Value="{DynamicResource TabViewItemForegroundSelected}" />
                                <Setter TargetName="selectedHighlight" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="selectedHighlight" Property="Visibility" Value="Hidden" />

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MyRadioButtonStyle"
               BasedOn="{StaticResource {x:Type ToggleButton}}"
               TargetType="RadioButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#20FFFFFF" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid Margin="5,5,10,5" DataContext="{Binding MainVM}">

        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="55" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="380" MinWidth="380" MaxWidth="800" />
        </Grid.ColumnDefinitions>
        <GridSplitter Width="10"
                      Margin="0,0,-10,0" Panel.ZIndex="1"
                      Background="Transparent" IsTabStop="False" ResizeDirection="Columns" />


        <ui:Card Grid.Column="0" 
                 Margin="5,5,0,5" Padding="0" VerticalAlignment="Stretch"
                 HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Panel.ZIndex="100">

            <StackPanel>
                <RadioButton Width="35" Height="30"
                             Margin="0,5" Padding="5"
                             IsChecked="{Binding CanvasToolMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static polycutShared:CanvasMode.Selection}, Mode=TwoWay}"
                             Style="{StaticResource MyRadioButtonStyle}">
                    <ui:SymbolIcon Filled="True" Symbol="Cursor24" />
                </RadioButton>
                <Separator Margin="0,0,0,0" />
                <RadioButton Width="35" Height="30"
                             Margin="0,5" Padding="5"
                             IsChecked="{Binding CanvasToolMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static polycutShared:CanvasMode.Line}, Mode=TwoWay}"
                             Style="{StaticResource MyRadioButtonStyle}">
                    <ui:SymbolIcon Filled="True" Symbol="Line20" />
                </RadioButton>
                <RadioButton Width="35" Height="30"
                             Margin="0,5" Padding="5"
                             IsChecked="{Binding CanvasToolMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static polycutShared:CanvasMode.Path}, Mode=TwoWay}"
                             Style="{StaticResource MyRadioButtonStyle}">
                    <ui:SymbolIcon Filled="False" Symbol="Pen20" />
                </RadioButton>
                <RadioButton Width="35" Height="30"
                             Margin="0,5" Padding="5"
                             IsChecked="{Binding CanvasToolMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static polycutShared:CanvasMode.Rectangle}, Mode=TwoWay}"
                             Style="{StaticResource MyRadioButtonStyle}">
                    <ui:SymbolIcon Symbol="RectangleLandscape12" />
                </RadioButton>
                <RadioButton Width="35" Height="30"
                             Margin="0,5" Padding="5"
                             IsChecked="{Binding CanvasToolMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static polycutShared:CanvasMode.Ellipse}, Mode=TwoWay}"
                             Style="{StaticResource MyRadioButtonStyle}">
                    <ui:SymbolIcon Symbol="Circle12" />
                </RadioButton>
                <RadioButton x:Name="CanvasTextTool"
                             Width="35" Height="30"
                             Margin="0,5" Padding="5"
                             IsChecked="{Binding CanvasToolMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static polycutShared:CanvasMode.Text}, Mode=TwoWay}"
                             Style="{StaticResource MyRadioButtonStyle}">
                    <ui:SymbolIcon Symbol="Text12" />
                </RadioButton>
            </StackPanel>

        </ui:Card>

        <ui:Card Grid.Column="1"
                 Height="50"
                 Margin="5" Padding="8" HorizontalAlignment="Left" VerticalAlignment="Top"
                 Panel.ZIndex="20"
                 Background="{DynamicResource ControlAltFillColorQuarternaryBrush}"
                Visibility="Visible">
            <!--Visibility="{Binding ElementName=CanvasTextTool, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">-->
           
            <StackPanel Orientation="Horizontal">
                <Label Content="Font"
                       Margin="0,2,10,0" VerticalAlignment="Center" />
                <ComboBox xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
                          Width="200"
                          Background="Transparent"
                          ItemTemplate="{DynamicResource FontTemplate}"
                          ScrollViewer.VerticalScrollBarVisibility="Visible"
                          SelectedValue="{Binding CanvasFontFamily, Mode=TwoWay}">
                    <ComboBox.Resources>

                        <CollectionViewSource x:Key="myFonts" Source="{Binding Source={x:Static Fonts.SystemFontFamilies}}">
                            <CollectionViewSource.SortDescriptions>
                                <ComponentModel:SortDescription PropertyName="Source" />
                            </CollectionViewSource.SortDescriptions>
                        </CollectionViewSource>

                        <Style x:Key="FontStyle">
                            <Setter Property="Control.FontFamily" Value="{Binding Source}" />
                            <Setter Property="Control.FontSize" Value="13" />
                        </Style>
                        <Style x:Key="FontStyle2">
                            <Setter Property="Control.FontFamily" Value="Segoe UI" />
                            <Setter Property="Control.FontSize" Value="13" />
                        </Style>

                        <DataTemplate x:Key="FontTemplate">
                            <StackPanel Orientation="Horizontal" VirtualizingStackPanel.IsVirtualizing="True">
                                <Grid Width="300" Height="16"
                                      VerticalAlignment="Center">
                                    <Grid.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="The Quick Brown Fox Jumps Over The Lazy Dog."
                                                       FontSize="15"
                                                       Style="{StaticResource FontStyle}" />
                                            <TextBlock Text="1234567890 !@#$%^&amp;*()-+[]{};:'/?"
                                                       FontSize="15"
                                                       Style="{StaticResource FontStyle}" />
                                        </StackPanel>
                                    </Grid.ToolTip>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding Source}"
                                               Grid.Column="0"
                                               Margin="0,0,10,0" VerticalAlignment="Center"
                                               Style="{StaticResource FontStyle2}" />
                                    <TextBlock Text="{Binding Source}"
                                               Grid.Column="1"
                                               VerticalAlignment="Center"
                                               Style="{StaticResource FontStyle}" />
                                </Grid>
                            </StackPanel>
                        </DataTemplate>

                    </ComboBox.Resources>

                    <ComboBox.ItemsSource>
                        <Binding Source="{StaticResource myFonts}" />
                    </ComboBox.ItemsSource>
                </ComboBox>
                <Separator Margin="5,0" />
                <Label Content="Size (pt)"
                       Margin="0,2,10,0" VerticalAlignment="Center" />
                <ComboBox Text="{Binding CanvasFontSize, Mode=OneWayToSource}"
                          Width="80"
                          Padding="7"
                          Background="Transparent" IsEditable="True" SelectedIndex="6">
                    <ComboBoxItem Content="3" />
                    <ComboBoxItem Content="4" />
                    <ComboBoxItem Content="6" />
                    <ComboBoxItem Content="8" />
                    <ComboBoxItem Content="10" />
                    <ComboBoxItem Content="12" />
                    <ComboBoxItem Content="14" />
                    <ComboBoxItem Content="16" />
                    <ComboBoxItem Content="18" />
                    <ComboBoxItem Content="20" />
                    <ComboBoxItem Content="24" />
                    <ComboBoxItem Content="28" />
                    <ComboBoxItem Content="32" />
                    <ComboBoxItem Content="36" />
                    <ComboBoxItem Content="48" />
                    <ComboBoxItem Content="72" />
                </ComboBox>
            </StackPanel>
        </ui:Card>

        <rc:ZoomBorder x:Name="zoomPanControl"
                       Grid.Column="1" CanvasMode="{Binding CanvasToolMode, Mode=OneWay}"
                       Background="Transparent" ClipToBounds="True"
                       Cursor="{Binding CanvasToolMode, Converter={StaticResource CanvasToolModeCursorConverter}, Mode=OneWay}" CanvasTextBox="{Binding CanvasTextBox}"
                       LeftButtonAction="None" MiddleButtonAction="Move" RightButtonAction="Reset"
                       ScaleAmount="0.002" ScaleMax="40" ScaleMin="0.01">


                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <AdornerDecorator>
                        <rc:PolyCanvas x:Name="mainCanvas"
                                       Width="{Binding Printer.BedWidth, Mode=TwoWay}"
                                       Height="{Binding Printer.BedHeight, Mode=TwoWay}"
                                       Margin="0,0,0,0"
                                       Background="Transparent"
                                       ChildrenCollection="{Binding DrawableCollection}"
                                       ClipToBounds="False" IsHitTestVisible="{Binding CanvasToolMode, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static polycutShared:CanvasMode.Selection}}"/>
                    </AdornerDecorator>



                    <Canvas Width="{Binding Printer.BedWidth, Mode=TwoWay}"
                            Height="{Binding Printer.BedHeight, Mode=TwoWay}"
                            Panel.ZIndex="-1"
                            IsHitTestVisible="False">

                        <Border x:Name="DupCuttingMatBounds"
                                Width="{Binding Printer.BedWidth, Mode=TwoWay}"
                                Height="{Binding Printer.BedHeight, Mode=TwoWay}"
                                Panel.ZIndex="20"
                                IsHitTestVisible="False" Opacity="0">

                            <svgc:SvgCanvas x:Name="DupCuttingMat"
                                            HorizontalAlignment="{Binding CuttingMat.SelectedHorizontalAlignment}"
                                            VerticalAlignment="{Binding CuttingMat.SelectedVerticalAlignment}"
                                            Source="{Binding CuttingMat.QualifiedSVGSource}">
                                <svgc:SvgCanvas.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="{Binding ElementName=Rotation, Path=SelectedItem}" />
                                        <TranslateTransform X="{Binding ElementName=CuttingMat_RenderTransform, Path=X}" Y="{Binding ElementName=CuttingMat_RenderTransform, Path=Y}" />
                                    </TransformGroup>
                                </svgc:SvgCanvas.RenderTransform>
                            </svgc:SvgCanvas>

                        </Border>
                        <Border x:Name="CuttingMatBounds"
                                Width="{Binding Printer.BedWidth, Mode=TwoWay}"
                                Height="{Binding Printer.BedHeight, Mode=TwoWay}"
                                Background="{Binding CanvasThemeColor}"
                                ClipToBounds="True" CornerRadius="0,0,0,0">
                            <svgc:SvgCanvas x:Name="CuttingMat"
                                            HorizontalAlignment="{Binding CuttingMat.SelectedHorizontalAlignment}"
                                            VerticalAlignment="{Binding CuttingMat.SelectedVerticalAlignment}"
                                            EnsureViewboxSize="False"
                                            Source="{Binding CuttingMat.QualifiedSVGSource}"
                                            Visibility="{Binding IsChecked, ElementName=CuttingMatVisibilityToggle, Converter={StaticResource BoolToVisibilityConverter}}">
                                <svgc:SvgCanvas.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="{Binding ElementName=Rotation, Path=SelectedItem}" />
                                        <TranslateTransform x:Name="CuttingMat_RenderTransform" X="0" Y="0" />
                                    </TransformGroup>
                                </svgc:SvgCanvas.RenderTransform>
                            </svgc:SvgCanvas>

                        </Border>

                        <!--<Border  x:Name="svgDrawingBounds"
         IsHitTestVisible="True"
         Margin="0"
         BorderThickness="0">

  <Grid>
    <local:DragCanvas  x:Name="svgDrawing"
                       Background="Transparent"
                       AllowDragOutOfView="True" CanvasSelectedMode="{Binding CanvasToolMode}">

    </local:DragCanvas>

  </Grid>

  <Border.BorderBrush>
    <VisualBrush>

      <VisualBrush.Visual>
        <Grid>

          <Rectangle  Stroke="#80FFFFFF"
                      StrokeThickness="0.5"
                      Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                      Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}" />
          <Rectangle StrokeDashArray="8 4"
                     Stroke="#80000000"
                     StrokeThickness="0.5"
                     Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                     Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}" />
        </Grid>

      </VisualBrush.Visual>
    </VisualBrush>
  </Border.BorderBrush>
</Border>-->

                        <!--  Fill the offset outside space  -->
                        <Path Canvas.Left="0" Canvas.Bottom="0"
                              ClipToBounds="True" IsHitTestVisible="False" StrokeThickness="0.5"
                              Visibility="{Binding Path=IsChecked, ElementName=WorkingAreaVisibilityToggle, Converter={StaticResource BoolToVisibilityConverter}}">
                            <Path.Data>
                                <CombinedGeometry GeometryCombineMode="Xor">
                                    <CombinedGeometry.Geometry1>
                                        <RectangleGeometry Rect="{Binding Printer.BedRect}" />
                                    </CombinedGeometry.Geometry1>
                                    <CombinedGeometry.Geometry2>
                                        <RectangleGeometry Rect="{Binding Printer.WorkingRect}" />
                                    </CombinedGeometry.Geometry2>
                                </CombinedGeometry>
                            </Path.Data>
                            <Path.Fill>
                                <LinearGradientBrush SpreadMethod="Reflect" StartPoint="0 0" EndPoint="0.01 0.01">
                                    <GradientStop Offset="0.5" Color="#30FFFFFF" />
                                    <GradientStop Offset="0.5" Color="#40FFFFFF" />
                                </LinearGradientBrush>
                                <!--<SolidColorBrush Color="#40000000"/>-->
                            </Path.Fill>
                            <Path.Stroke>
                                <SolidColorBrush Color="Transparent" />
                            </Path.Stroke>

                            <Path.Effect>
                                <DropShadowEffect BlurRadius="15" Direction="0" RenderingBias="Quality" ShadowDepth="0" />

                            </Path.Effect>
                            <Path.LayoutTransform>
                                <ScaleTransform ScaleY="-1" />
                            </Path.LayoutTransform>
                        </Path>

                    </Canvas>

                    <Grid Width="{Binding Printer.BedWidth, Mode=TwoWay, FallbackValue=235}"
                          Height="{Binding Printer.BedHeight, Mode=TwoWay, FallbackValue=235}"
                          Margin="0,0,0,0" Panel.ZIndex="-11"
                          Background="#FF000000">

                        <Grid.Effect>
                            <DropShadowEffect  RenderingBias="Quality" BlurRadius="5" ShadowDepth="2"/>
                        </Grid.Effect>

                        
                    </Grid>
                </Grid>


        </rc:ZoomBorder>




























        <ui:Card Grid.Column="2"
                 Margin="5,5,0,5" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch">
            <ui:Card.Background>
                <SolidColorBrush Color="{StaticResource CardBackgroundFillColorDefault}" />
            </ui:Card.Background>
            <Grid VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <!--<RowDefinition  Height="50"/>-->
                </Grid.RowDefinitions>
                <TabControl Margin="0" VerticalAlignment="Stretch"
                            BorderBrush="Transparent">
                    <TabItem IsSelected="True" Style="{StaticResource CustomTabStyle}">
                        <TabItem.Header>
                            <StackPanel Margin="10,0" Orientation="Horizontal">
                                <ui:SymbolIcon Margin="0,0,6,0" Symbol="PuzzlePiece24" />
                                <TextBlock Text="Elements" />
                            </StackPanel>
                        </TabItem.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Separator Grid.Row="0" Margin="5" />
                            <ScrollViewer Grid.Row="1"
                                          Margin="-14,10,-14,0" Padding="25,0,25,0"
                                          CanContentScroll="True" VerticalScrollBarVisibility="Visible">
                                <DockPanel>

                                    <StackPanel Background="Transparent" DockPanel.Dock="Bottom">

                                        <StackPanel Margin="0,-5,0,-5" Orientation="Horizontal">

                                            <ui:Button Margin="5" Padding="6"
                                                       Command="{Binding BrowseSVGCommand}">
                                                <ui:SymbolIcon Symbol="Add12" />
                                            </ui:Button>
                                            <TextBlock Text="Import SVG"
                                                       Margin="10,0" VerticalAlignment="Center" />
                                        </StackPanel>

                                        <Separator Margin="0,10,0,10" />

                                        <ui:ListView x:Name="FilesList" ItemsSource="{Binding SVGFiles}">
                                            <ui:ListView.ItemContainerStyle>
                                                <Style TargetType="ListViewItem">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ListViewItem">
                                                                <Border Background="{TemplateBinding Background}">
                                                                    <ContentPresenter />
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ui:ListView.ItemContainerStyle>
                                            <ui:ListView.ItemTemplate>
                                                <DataTemplate>

                                                    <ui:CardExpander Margin="-10,0" Padding="10,5"
                                                                     Background="Transparent" BorderBrush="Transparent" ContentPadding="0"
                                                                     FlowDirection="RightToLeft" IsExpanded="True"
                                                                     Style="{StaticResource CustomCardExpanderStyle}">
                                                        <ui:CardExpander.Header>
                                                            <Grid FlowDirection="LeftToRight">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition />
                                                                    <ColumnDefinition Width="32" />
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Text="{Binding FilePath, Converter={StaticResource PathTrimmerConverter}}"
                                                                           MaxWidth="260"
                                                                           Margin="10,-1,10,0" VerticalAlignment="Center"
                                                                           TextTrimming="WordEllipsis" />
                                                                <ui:Button Grid.Column="1"
                                                                           Padding="6"
                                                                           Background="Transparent"
                                                                           Command="{Binding DataContext.MainVM.RemoveSVGCommand, RelativeSource={RelativeSource AncestorType=Page}}"
                                                                           CommandParameter="{Binding}">
                                                                    <ui:SymbolIcon Foreground="{StaticResource PaletteRedBrush}" Symbol="Dismiss48" />
                                                                </ui:Button>
                                                                <ToolTipService.ToolTip>
                                                                    <ToolTip MaxWidth="700">
                                                                        <TextBlock Text="{Binding FilePath}" TextWrapping="Wrap" />
                                                                    </ToolTip>
                                                                </ToolTipService.ToolTip>
                                                            </Grid>


                                                        </ui:CardExpander.Header>

                                                        <StackPanel Margin="15,0,15,0" FlowDirection="LeftToRight">
                                                            <ui:ListView ItemsSource="{Binding SVGComponents}" SelectionMode="Single">
                                                                <ui:ListView.ItemContainerStyle>
                                                                    <Style TargetType="ListViewItem">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="ListViewItem">
                                                                                    <Border Padding="4">
                                                                                        <ContentPresenter />
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                                                    </Style>
                                                                </ui:ListView.ItemContainerStyle>
                                                                <ui:ListView.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <Grid>

                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="5" />
                                                                                <ColumnDefinition Width="32" />
                                                                                <ColumnDefinition Width="5" />
                                                                                <ColumnDefinition />
                                                                                <ColumnDefinition Width="5" />
                                                                                <ColumnDefinition Width="32" />

                                                                            </Grid.ColumnDefinitions>
                                                                            <TextBlock Text="{Binding VisualName}"
                                                                                       Grid.Column="3"
                                                                                       VerticalAlignment="Center" />

                                                                            <Border Grid.Column="0"
                                                                                    Width="2" Height="20"
                                                                                    Margin="-10,0,0,0"
                                                                                    Background="{StaticResource PaletteBlueBrush}"
                                                                                    CornerRadius="2"
                                                                                    Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" />

                                                                            <ToggleButton x:Name="WorkingAreaVisibilityToggle"
                                                                                          Grid.Column="1"
                                                                                          IsChecked="{Binding IsHidden}">
                                                                                <ToggleButton.Template>
                                                                                    <ControlTemplate>
                                                                                        <ContentControl>
                                                                                            <ContentControl.Style>
                                                                                                <Style TargetType="ContentControl">
                                                                                                    <Style.Triggers>
                                                                                                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                                                            <Setter Property="Content">
                                                                                                                <Setter.Value>
                                                                                                                    <ui:Card Padding="5,4,5,0"
                                                                                                                             Background="Transparent"
                                                                                                                             BorderBrush="{StaticResource ControlAltFillColorDisabledBrush}">
                                                                                                                        <ui:SymbolIcon Filled="True" Symbol="EyeOff24" />
                                                                                                                    </ui:Card>
                                                                                                                </Setter.Value>
                                                                                                            </Setter>

                                                                                                        </DataTrigger>
                                                                                                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="False">
                                                                                                            <Setter Property="Content">
                                                                                                                <Setter.Value>
                                                                                                                    <ui:Card Padding="5,4,5,0"
                                                                                                                             Background="Transparent"
                                                                                                                             BorderBrush="{StaticResource ControlAltFillColorDisabledBrush}">
                                                                                                                        <!--  Replace with your unchecked icon  -->
                                                                                                                        <ui:SymbolIcon Filled="True" Symbol="Eye48" />
                                                                                                                    </ui:Card>
                                                                                                                </Setter.Value>
                                                                                                            </Setter>
                                                                                                        </DataTrigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </ContentControl.Style>
                                                                                        </ContentControl>
                                                                                    </ControlTemplate>
                                                                                </ToggleButton.Template>
                                                                            </ToggleButton>

                                                                        </Grid>
                                                                    </DataTemplate>
                                                                </ui:ListView.ItemTemplate>
                                                            </ui:ListView>
                                                        </StackPanel>
                                                    </ui:CardExpander>
                                                </DataTemplate>
                                            </ui:ListView.ItemTemplate>
                                        </ui:ListView>


                                    </StackPanel>
                                </DockPanel>
                            </ScrollViewer>
                        </Grid>
                    </TabItem>
                    <TabItem Style="{StaticResource CustomTabStyle}">
                        <TabItem.Header>
                            <StackPanel Margin="10,0" Orientation="Horizontal">
                                <ui:SymbolIcon Margin="0,0,6,0" Symbol="LayerDiagonal20" />
                                <TextBlock Text="Align" />
                            </StackPanel>
                        </TabItem.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Separator Grid.Row="0" Margin="5" />
                            <ScrollViewer Grid.Row="1"
                                          Margin="-14,10,-14,0" Padding="25,0,25,0"
                                          CanContentScroll="True" VerticalScrollBarVisibility="Visible">
                                <DockPanel>

                                    <StackPanel DockPanel.Dock="Bottom">

                                        <Label Content="Input SVG"
                                               Grid.Row="0"
                                               Visibility="Collapsed" />

                                        <!--<Grid Margin="0,5,0,15" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="5" />
                      <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <ui:TextBox Text="{Binding SVGSource}" />
                    <ui:Button Content="Browse..."
                               Grid.Column="2"
                               Command="{Binding BrowseSVGCommand}" />
                  </Grid>-->

                                        <!--<CheckBox Content="Ignore Hidden" Visibility="Collapsed"
                            IsChecked="{Binding Configuration.IgnoreHidden, Mode=TwoWay}" />
                  <CheckBox Content="Ignore Locked" Visibility="Collapsed"
                            IsChecked="{Binding Configuration.IgnoreLocked, Mode=TwoWay}" />-->

                                        <Separator Margin="0,10" Visibility="Collapsed" />

                                        <ui:CardExpander Margin="-15,0"
                                                         Background="Transparent" BorderBrush="Transparent" ContentPadding="0"
                                                         FlowDirection="RightToLeft" IsExpanded="True"
                                                         Style="{StaticResource CustomCardExpanderStyle}">
                                            <ui:CardExpander.Header>
                                                <Grid Margin="10,0" FlowDirection="LeftToRight">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="auto" />
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="240" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Text="Printer"
                                                               Padding="1,2,0,0" VerticalAlignment="Center" />
                                                    <Grid Grid.Column="2" Margin="10,0,0,0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <ComboBox Grid.Column="0"
                                                                  Background="Transparent" DisplayMemberPath="Name"
                                                                  ItemsSource="{Binding Printers}"
                                                                  SelectedItem="{Binding Printer}" />
                                                        <ui:Button Grid.Column="1"
                                                                   Width="25" Height="35"
                                                                   Margin="-55,0,-10,0" Padding="0"
                                                                   Background="Transparent" BorderBrush="Transparent"
                                                                   Command="{Binding SavePrinterCommand}"
                                                                   CommandParameter="Ender 3 S1">
                                                            <ui:SymbolIcon Margin="0" Symbol="Save24" />
                                                        </ui:Button>
                                                    </Grid>

                                                </Grid>
                                            </ui:CardExpander.Header>

                                            <StackPanel Margin="14,0" FlowDirection="LeftToRight">
                                                <StackPanel.Background>
                                                    <SolidColorBrush Color="Transparent" />
                                                </StackPanel.Background>

                                                <Label Content="Bed Dimensions" Margin="0,0,0,10" />

                                                <Grid Margin="0,0,0,0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="25" />
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="60" />
                                                        <ColumnDefinition Width="25" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition />
                                                        <RowDefinition Height="5" />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <Label Content="W"
                                                           Padding="1,2,0,0" VerticalAlignment="Center" />
                                                    <ui:TextBox x:Name="canvasW"
                                                                Text="{Binding Printer.BedWidth, Mode=TwoWay, UpdateSourceTrigger=LostFocus, Converter={StaticResource UnitConverter}}"
                                                                Grid.Column="1"
                                                                ClearButtonEnabled="False" />
                                                    <Label Content="H"
                                                           Grid.Row="0" Grid.Column="3"
                                                           Padding="1,2,0,0" VerticalAlignment="Center" />
                                                    <ui:TextBox x:Name="canvasH"
                                                                Text="{Binding Printer.BedHeight, Mode=TwoWay, UpdateSourceTrigger=LostFocus, Converter={StaticResource UnitConverter}}"
                                                                Grid.Row="0" Grid.Column="4"
                                                                ClearButtonEnabled="False" />
                                                    <Label Content="mm"
                                                           Grid.Column="1"
                                                           Padding="1,2,10,0" HorizontalAlignment="Right" VerticalAlignment="Center"
                                                           Foreground="{StaticResource ControlFillColorSecondaryBrush}" />
                                                    <Label Content="mm"
                                                           Grid.Column="4"
                                                           Padding="1,2,10,0" HorizontalAlignment="Right" VerticalAlignment="Center"
                                                           Foreground="{StaticResource ControlFillColorSecondaryBrush}" />
                                                </Grid>

                                                <StackPanel Margin="0,10,0,10" Orientation="Horizontal">

                                                    <Label Content="Working Area" Margin="0,4,10,0" />

                                                    <ToggleButton x:Name="WorkingAreaVisibilityToggle" IsChecked="True">
                                                        <ToggleButton.Template>
                                                            <ControlTemplate>
                                                                <ContentControl>
                                                                    <ContentControl.Style>
                                                                        <Style TargetType="ContentControl">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                                    <Setter Property="Content">
                                                                                        <Setter.Value>
                                                                                            <ui:Card Padding="8,4"
                                                                                                     Background="Transparent"
                                                                                                     BorderBrush="{StaticResource PaletteBlueBrush}">
                                                                                                <ui:SymbolIcon Symbol="Eye24" />
                                                                                            </ui:Card>
                                                                                        </Setter.Value>
                                                                                    </Setter>

                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="False">
                                                                                    <Setter Property="Content">
                                                                                        <Setter.Value>
                                                                                            <ui:Card Padding="8,4"
                                                                                                     Background="Transparent"
                                                                                                     BorderBrush="{StaticResource ControlFillColorSecondaryBrush}">
                                                                                                <!--  Replace with your unchecked icon  -->
                                                                                                <ui:SymbolIcon Symbol="EyeOff24" />
                                                                                            </ui:Card>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </ContentControl.Style>
                                                                </ContentControl>
                                                            </ControlTemplate>
                                                        </ToggleButton.Template>
                                                    </ToggleButton>

                                                </StackPanel>

                                                <Grid Margin="0,0,0,0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="25" />
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="60" />
                                                        <ColumnDefinition Width="25" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition />
                                                        <RowDefinition Height="5" />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>

                                                    <Label Content="X"
                                                           Padding="1,2,0,0" VerticalAlignment="Center" />
                                                    <ui:TextBox Text="{Binding Printer.WorkingOffsetX, Mode=TwoWay, UpdateSourceTrigger=LostFocus, Converter={StaticResource UnitConverter}}"
                                                                Grid.Column="1"
                                                                ClearButtonEnabled="False" />
                                                    <Label Content="Y"
                                                           Grid.Row="0" Grid.Column="3"
                                                           Padding="1,2,0,0" VerticalAlignment="Center" />
                                                    <ui:TextBox Text="{Binding Printer.WorkingOffsetY, Mode=TwoWay, UpdateSourceTrigger=LostFocus, Converter={StaticResource UnitConverter}}"
                                                                Grid.Row="0" Grid.Column="4"
                                                                ClearButtonEnabled="False" />

                                                    <Label Content="W"
                                                           Grid.Row="2"
                                                           Padding="1,2,0,0" VerticalAlignment="Center" />
                                                    <ui:TextBox Text="{Binding Printer.WorkingWidth, Mode=TwoWay, UpdateSourceTrigger=LostFocus, Converter={StaticResource UnitConverter}}"
                                                                Grid.Row="2" Grid.Column="1"
                                                                ClearButtonEnabled="False" />
                                                    <Label Content="H"
                                                           Grid.Row="2" Grid.Column="3"
                                                           Padding="1,2,0,0" VerticalAlignment="Center" />
                                                    <ui:TextBox Text="{Binding Printer.WorkingHeight, Mode=TwoWay, UpdateSourceTrigger=LostFocus, Converter={StaticResource UnitConverter}}"
                                                                Grid.Row="2" Grid.Column="4"
                                                                ClearButtonEnabled="False" />

                                                    <Label Content="mm"
                                                           Grid.Column="1"
                                                           Padding="1,2,10,0" HorizontalAlignment="Right" VerticalAlignment="Center"
                                                           Foreground="{StaticResource ControlFillColorSecondaryBrush}" />
                                                    <Label Content="mm"
                                                           Grid.Column="4"
                                                           Padding="1,2,10,0" HorizontalAlignment="Right" VerticalAlignment="Center"
                                                           Foreground="{StaticResource ControlFillColorSecondaryBrush}" />
                                                    <Label Content="mm"
                                                           Grid.Row="2" Grid.Column="1"
                                                           Padding="1,2,10,0" HorizontalAlignment="Right" VerticalAlignment="Center"
                                                           Foreground="{StaticResource ControlFillColorSecondaryBrush}" />
                                                    <Label Content="mm"
                                                           Grid.Row="2" Grid.Column="4"
                                                           Padding="1,2,10,0" HorizontalAlignment="Right" VerticalAlignment="Center"
                                                           Foreground="{StaticResource ControlFillColorSecondaryBrush}" />

                                                </Grid>

                                            </StackPanel>

                                        </ui:CardExpander>

                                        <Separator Margin="0,10,0,5" />
                                        <ui:CardExpander x:Name="cuttingMat_AlignmentBoxes"
                                                         Margin="-15,0"
                                                         Background="Transparent" BorderBrush="Transparent" ContentPadding="0"
                                                         FlowDirection="RightToLeft" IsExpanded="True"
                                                         Style="{StaticResource CustomCardExpanderStyle}">
                                            <ui:CardExpander.Header>
                                                <Grid Margin="10,0" FlowDirection="LeftToRight">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="auto" />
                                                        <ColumnDefinition Width="auto" />
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="220" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Text="Mat"
                                                               Padding="1,2,10,0" VerticalAlignment="Center" />
                                                    <ToggleButton x:Name="CuttingMatVisibilityToggle"
                                                                  Grid.Column="1"
                                                                  IsChecked="True">
                                                        <ToggleButton.Template>
                                                            <ControlTemplate>
                                                                <ContentControl>
                                                                    <ContentControl.Style>
                                                                        <Style TargetType="ContentControl">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                                    <Setter Property="Content">
                                                                                        <Setter.Value>
                                                                                            <ui:Card Padding="8,4"
                                                                                                     Background="Transparent"
                                                                                                     BorderBrush="{StaticResource PaletteBlueBrush}">
                                                                                                <ui:SymbolIcon Symbol="Eye24" />
                                                                                            </ui:Card>
                                                                                        </Setter.Value>
                                                                                    </Setter>

                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="False">
                                                                                    <Setter Property="Content">
                                                                                        <Setter.Value>
                                                                                            <ui:Card Padding="8,4"
                                                                                                     Background="Transparent"
                                                                                                     BorderBrush="{StaticResource ControlFillColorSecondaryBrush}">
                                                                                                <!--  Replace with your unchecked icon  -->
                                                                                                <ui:SymbolIcon Symbol="EyeOff24" />
                                                                                            </ui:Card>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </ContentControl.Style>
                                                                </ContentControl>
                                                            </ControlTemplate>
                                                        </ToggleButton.Template>
                                                    </ToggleButton>

                                                    <Grid Grid.Column="3" Margin="10,0,0,0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <ComboBox Grid.Column="0"
                                                                  Padding="10,8,30,8"
                                                                  Background="Transparent" DisplayMemberPath="DisplayName"
                                                                  ItemsSource="{Binding CuttingMats}"
                                                                  SelectedItem="{Binding CuttingMat}" />
                                                        <ui:Button Grid.Column="1"
                                                                   Width="25" Height="35"
                                                                   Margin="-55,0,-10,0" Padding="0"
                                                                   Background="Transparent" BorderBrush="Transparent"
                                                                   Command="{Binding SaveCuttingMatCommand}"
                                                                   CommandParameter="Cricut StandardGrip 12''">
                                                            <ui:SymbolIcon Margin="0" Symbol="Save24" />
                                                        </ui:Button>
                                                    </Grid>

                                                </Grid>
                                            </ui:CardExpander.Header>

                                            <StackPanel Margin="14,0" FlowDirection="LeftToRight">

                                                <Label Content="Alignment" Margin="0,0,0,0" />

                                                <Grid Margin="10,10,0,0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="10" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition />
                                                        <RowDefinition Height="5" />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <ComboBox ItemsSource="{Binding CuttingMat.VerticalAlignment}"
                                                              SelectedIndex="0"
                                                              SelectedItem="{Binding CuttingMat.SelectedVerticalAlignment, Mode=TwoWay}" />
                                                    <ComboBox Grid.Column="2"
                                                              ItemsSource="{Binding CuttingMat.HorizontalAlignment}"
                                                              SelectedIndex="0"
                                                              SelectedItem="{Binding CuttingMat.SelectedHorizontalAlignment, Mode=TwoWay}" />
                                                </Grid>

                                                <Grid Margin="0,10,0,0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="auto" />
                                                        <ColumnDefinition Width="15" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition />
                                                        <RowDefinition Height="5" />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>

                                                    <Label Content="Rotation" VerticalAlignment="Center" />

                                                    <ComboBox x:Name="Rotation"
                                                              Grid.Column="2"
                                                              ItemsSource="{Binding CuttingMat.Rotation}"
                                                              SelectedIndex="0"
                                                              SelectedItem="{Binding CuttingMat.SelectedRotation}">

                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock>
                                                                    <Run Text="{Binding Path=.}" />
                                                                    <Run Text=" °" />
                                                                </TextBlock>
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>

                                                    </ComboBox>
                                                </Grid>

                                            </StackPanel>

                                        </ui:CardExpander>

                                    </StackPanel>

                                </DockPanel>
                            </ScrollViewer>

                        </Grid>
                    </TabItem>

                    <TabItem Style="{StaticResource CustomTabStyle}">
                        <TabItem.Header>
                            <StackPanel Margin="10,0" Orientation="Horizontal">
                                <ui:SymbolIcon Margin="0,0,6,0" Symbol="Options20" />
                                <TextBlock Text="Configure" />
                            </StackPanel>
                        </TabItem.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Separator Grid.Row="0" Margin="5" />
                            <ScrollViewer Grid.Row="1"
                                          Margin="-14,10,-14,0" Padding="25,0,25,0"
                                          CanContentScroll="True" VerticalScrollBarVisibility="Visible">
                                <DockPanel>

                                    <StackPanel DockPanel.Dock="Bottom">
                                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">

                                            <RadioButton x:Name="modeCut"
                                                         Width="80" Height="60"
                                                         Margin="0,0,20,0"
                                                         IsChecked="{Binding Configuration.SelectedToolMode, Mode=TwoWay, Converter={StaticResource RadioButtonConverter}, ConverterParameter={x:Static pc:ProcessorConfiguration+ToolMode.Cut}}"
                                                         Style="{StaticResource {x:Type ToggleButton}}">
                                                <StackPanel>
                                                    <ui:SymbolIcon Margin="0,6,0,0" Symbol="CalligraphyPen20" />
                                                    <TextBlock Text="Cut"
                                                               Margin="0,4,0,0" HorizontalAlignment="Center"
                                                               FontWeight="SemiBold" />

                                                </StackPanel>

                                                <RadioButton.ToolTip>
                                                    <TextBlock TextWrapping="Wrap">
                                                        Settings designed for cutting objects out using a drag-knife. 
                                                    </TextBlock>
                                                </RadioButton.ToolTip>

                                            </RadioButton>
                                            <RadioButton x:Name="modeDraw"
                                                         Width="80" Height="60"
                                                         d:IsChecked="True"
                                                         IsChecked="{Binding Configuration.SelectedToolMode, Mode=TwoWay, Converter={StaticResource RadioButtonConverter}, ConverterParameter={x:Static pc:ProcessorConfiguration+ToolMode.Draw}}"
                                                         Style="{StaticResource {x:Type ToggleButton}}">
                                                <StackPanel>
                                                    <ui:SymbolIcon Margin="0,6,0,0" Symbol="Pen20" />
                                                    <TextBlock Text="Draw"
                                                               Margin="0,4,0,0" HorizontalAlignment="Center"
                                                               FontWeight="SemiBold" />

                                                </StackPanel>
                                                <RadioButton.ToolTip>
                                                    <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                        Settings designed for drawing using a pen, marker, or even a foil stamping pen.
                                                    </TextBlock>
                                                </RadioButton.ToolTip>
                                            </RadioButton>

                                        </StackPanel>

                                        <Label Content="Travel Speed" Margin="0,20,0,-5" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="10" />
                                                <ColumnDefinition Width="100" />
                                            </Grid.ColumnDefinitions>

                                            <Slider x:Name="travelSpeed"
                                                    Margin="0,5,0,0" VerticalAlignment="Center"
                                                    IsSnapToTickEnabled="True" Maximum="100" Minimum="10" TickFrequency="1"
                                                    Value="{Binding Configuration.TravelSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <ui:NumberBox Grid.Column="2"
                                                          Background="Transparent" BorderBrush="Transparent" ClearButtonEnabled="False"
                                                          IsReadOnly="True" SpinButtonPlacementMode="Hidden"
                                                          Value="{Binding Configuration.TravelSpeed, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                                            <Label Content="mm/s"
                                                   Grid.Column="2"
                                                   Margin="-50,0,0,0" Padding="1,2,10,0" HorizontalAlignment="Right"
                                                   VerticalAlignment="Center"
                                                   Foreground="{StaticResource ControlFillColorSecondaryBrush}" />
                                            <Grid.ToolTip>
                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                    Speed of the toolhead when the tool is raised and not actively cutting/drawing. 
                                                </TextBlock>
                                            </Grid.ToolTip>
                                        </Grid>
                                        <Label Content="Draw Speed" Margin="0,20,0,-5" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="10" />
                                                <ColumnDefinition Width="100" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.ToolTip>
                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                    Speed of the toolhead when the tool is down and cutting/drawing.<LineBreak/><LineBreak/> Slower is usually better
                                                </TextBlock>
                                            </Grid.ToolTip>
                                            <Slider x:Name="drawSpeed"
                                                    Margin="0,5,0,0" VerticalAlignment="Center"
                                                    IsSnapToTickEnabled="True" Maximum="60" Minimum="5" TickFrequency="1"
                                                    Value="{Binding Configuration.WorkSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <ui:NumberBox Grid.Column="2"
                                                          Background="Transparent" BorderBrush="Transparent" ClearButtonEnabled="False"
                                                          IsReadOnly="True" SpinButtonPlacementMode="Hidden"
                                                          Value="{Binding Configuration.WorkSpeed, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                                            <Label Content="mm/s"
                                                   Grid.Column="2"
                                                   Margin="-50,0,0,0" Padding="1,2,10,0" HorizontalAlignment="Right"
                                                   VerticalAlignment="Center"
                                                   Foreground="{StaticResource ControlFillColorSecondaryBrush}" />

                                        </Grid>
                                        <Label Content="Z Height" Margin="0,10,0,10" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40" />
                                                <ColumnDefinition Width="10" />
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="20" />
                                                <ColumnDefinition Width="40" />
                                                <ColumnDefinition Width="10" />
                                                <ColumnDefinition />

                                            </Grid.ColumnDefinitions>
                                            <Grid.ToolTip>
                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                    How high above the workpiece the toolhead should be positioned when travelling or drawing.<LineBreak/><LineBreak/> Positive values are offset above the bed surface. <LineBreak/><LineBreak/>This value is affected by your printer's Z-Offset.  
                                                </TextBlock>
                                            </Grid.ToolTip>
                                            <Label Content="Draw"
                                                   Padding="1,2,0,0" VerticalAlignment="Center" />
                                            <ui:TextBox Text="{Binding Configuration.WorkZ}"
                                                        Grid.Column="2"
                                                        ClearButtonEnabled="False" />
                                            <Label Content="mm"
                                                   Grid.Column="2"
                                                   Margin="-50,0,0,0" Padding="1,2,10,0" HorizontalAlignment="Right"
                                                   VerticalAlignment="Center"
                                                   Foreground="{StaticResource ControlFillColorSecondaryBrush}" />

                                            <Label Content="Travel"
                                                   Grid.Column="4"
                                                   Padding="1,2,0,0" VerticalAlignment="Center" />
                                            <ui:TextBox Text="{Binding Configuration.TravelZ}"
                                                        Grid.Column="6"
                                                        ClearButtonEnabled="False" />
                                            <Label Content="mm"
                                                   Grid.Column="6"
                                                   Margin="-50,0,0,0" Padding="1,2,10,0" HorizontalAlignment="Right"
                                                   VerticalAlignment="Center"
                                                   Foreground="{StaticResource ControlFillColorSecondaryBrush}" />

                                        </Grid>

                                        <Separator Margin="0,10,0,0" />

                                        <StackPanel>

                                            <ui:CardExpander Margin="-15,0"
                                                             Background="Transparent" BorderBrush="Transparent" ContentPadding="0"
                                                             FlowDirection="RightToLeft" IsExpanded="True"
                                                             Style="{StaticResource CustomCardExpanderStyle}">
                                                <ui:CardExpander.Header>
                                                    <Label Content="Processing Settings"
                                                           Margin="10,0"
                                                           FlowDirection="LeftToRight" />

                                                </ui:CardExpander.Header>

                                                <StackPanel Margin="15,-10,15,10" FlowDirection="LeftToRight">

                                                    <Grid Margin="0,10,0,0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="200" />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition />
                                                            <RowDefinition Height="5" />
                                                            <RowDefinition />
                                                        </Grid.RowDefinitions>

                                                        <Label Content="Curve-fitting Precision"
                                                               Margin="0,0,20,0" Padding="1,2,0,0" VerticalAlignment="Center" >
                                                            <Label.ToolTip>
                                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                                    Curved lines are approximated as straight lines when converted to GCode. This sets the effective smallest length that each segment of the curve should be. Smaller values increase accuracy, but massively increase processing time.
                                                                </TextBlock>
                                                            </Label.ToolTip>
                                                        </Label>
                                                        <ui:TextBox Text="{Binding Configuration.Tolerance}"
                                                                    Grid.Column="1"
                                                                    ClearButtonEnabled="False"/>
                                                        <Label Content="mm"
                                                               Grid.Column="1"
                                                               Margin="-50,0,0,0" Padding="1,2,10,0" HorizontalAlignment="Right"
                                                               VerticalAlignment="Center"
                                                               Foreground="{StaticResource ControlFillColorSecondaryBrush}" />

                                                        <CheckBox x:Name="extractSingleColor"
                                                                  Content="Extract one colour"
                                                                  Grid.Row="2"
                                                                  IsChecked="{Binding Configuration.ExtractOneColour, Mode=TwoWay}" >
                                                            <CheckBox.ToolTip>
                                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                                    Processes only objects with the specified colour, and ignores all others.
                                                                </TextBlock>
                                                            </CheckBox.ToolTip>
                                                        </CheckBox>
                                                        <ui:TextBox Text="{Binding Configuration.ExtractionColor, Mode=TwoWay}"
                                                                    Grid.Row="2" Grid.Column="1"
                                                                    Visibility="{Binding ElementName=extractSingleColor, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}" />

                                                    </Grid>

                                                </StackPanel>

                                            </ui:CardExpander>

                                            <Separator />

                                            <ui:CardExpander Margin="-15,0"
                                                             Background="Transparent" BorderBrush="Transparent" ContentPadding="0"
                                                             FlowDirection="RightToLeft" IsExpanded="True"
                                                             Style="{StaticResource CustomCardExpanderStyle}"
                                                             Visibility="{Binding ElementName=modeCut, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <ui:CardExpander.Header>
                                                    <Label Content="Blade Settings"
                                                           Margin="10,0"
                                                           FlowDirection="LeftToRight" />

                                                </ui:CardExpander.Header>

                                                <StackPanel Margin="15,-10,15,10" FlowDirection="LeftToRight">
                                                    <Grid Margin="0,10,0,0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="200" />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition />
                                                            <RowDefinition Height="5" />
                                                            <RowDefinition />
                                                            <RowDefinition Height="5" />
                                                            <RowDefinition />
                                                        </Grid.RowDefinitions>

                                                        <Label Content="Tool Diameter"
                                                               Margin="0,0,20,0" Padding="1,2,0,0" VerticalAlignment="Center">
                                                            <Label.ToolTip>
                                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                                    Diameter of the swivelling part of the cutting blade.<LineBreak/>Most blades are ~1mm in diameter, however the point of the blade may not be at the very edge.<LineBreak/><LineBreak/>Setting the tool diameter correctly adds a compensatory swivel for blade rotation to align with the next move. This is most noticeable on tiny features.
                                                                </TextBlock>
                                                            </Label.ToolTip>
                                                        </Label>
                                                        <ui:TextBox Text="{Binding Configuration.CuttingConfig.ToolDiameter}"
                                                                    Grid.Column="1"
                                                                    ClearButtonEnabled="False" />
                                                        <Label Content="mm"
                                                               Grid.Column="1"
                                                               Margin="-50,0,0,0" Padding="1,2,10,0" HorizontalAlignment="Right"
                                                               VerticalAlignment="Center"
                                                               Foreground="{StaticResource ControlFillColorSecondaryBrush}" />

                                                        <Label Content="Overcut"
                                                               Grid.Row="2"
                                                               Margin="0,0,20,0" Padding="1,2,0,0" VerticalAlignment="Center">
                                                            <Label.ToolTip>
                                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                                    Extends cuts by the specified amount to compensate for cutting moves ending slightly too early.<LineBreak/> <LineBreak/>Recommended value ~1mm
                                                                </TextBlock>
                                                            </Label.ToolTip>
                                                        </Label>
                                                        <ui:TextBox Text="{Binding Configuration.CuttingConfig.Overcut}"
                                                                    Grid.Row="2" Grid.Column="1"
                                                                    ClearButtonEnabled="False" />
                                                        <Label Content="mm"
                                                               Grid.Row="2" Grid.Column="1"
                                                               Margin="-50,0,0,0" Padding="1,2,10,0" HorizontalAlignment="Right"
                                                               VerticalAlignment="Center"
                                                               Foreground="{StaticResource ControlFillColorSecondaryBrush}" />

                                                        <Label Content="Cutting order"
                                                               Grid.Row="4"
                                                               Margin="0,0,20,0" Padding="1,2,0,0" VerticalAlignment="Center"
                                                               IsEnabled="{Binding UsingGCodePlot}">
                                                            <Label.ToolTip>
                                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                                    For each object, whether outer features or inner features are cut first. 
                                                                </TextBlock>
                                                            </Label.ToolTip>
                                                        </Label>

                                                        <ComboBox Grid.Row="4" Grid.Column="2"
                                                                  IsEnabled="{Binding UsingGCodePlot}"
                                                                  SelectedIndex="{Binding Configuration.InsideOutCuttingOrder}">
                                                            <ComboBoxItem Content="Outer First" />
                                                            <ComboBoxItem Content="Inner First" />

                                                        </ComboBox>
                                                    </Grid>

                                                </StackPanel>
                                            </ui:CardExpander>

                                            <ui:CardExpander Margin="-15,0"
                                                             Background="Transparent" BorderBrush="Transparent" ContentPadding="0"
                                                             FlowDirection="RightToLeft" IsExpanded="True"
                                                             Style="{StaticResource CustomCardExpanderStyle}"
                                                             Visibility="{Binding ElementName=modeDraw, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <ui:CardExpander.Header>
                                                    <Label Content="Drawing Settings"
                                                           Margin="10,0"
                                                           FlowDirection="LeftToRight" />

                                                </ui:CardExpander.Header>

                                                <StackPanel Margin="15,-10,15,0" FlowDirection="LeftToRight">
                                                    <Grid Margin="0,10,0,0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="200" />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition />
                                                            <RowDefinition Height="5" />
                                                            <RowDefinition />
                                                            <RowDefinition Height="5" />
                                                            <RowDefinition />
                                                            <RowDefinition Height="5" />
                                                            <RowDefinition />
                                                            <RowDefinition Height="5" />
                                                            <RowDefinition />
                                                            <RowDefinition Height="5" />
                                                            <RowDefinition />
                                                        </Grid.RowDefinitions>

                                                        <Label Content="Drawing Angle"
                                                               Grid.Row="0"
                                                               Margin="0,0,20,0" Padding="1,2,0,0" VerticalAlignment="Center"
                                                               IsEnabled="{Binding UsingGCodePlot}">
                                                            <Label.ToolTip>
                                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                                   Specifies the preferred drawing direction for shape outlines.<LineBreak/><LineBreak/>0° represents East, with positive values rotating counterclockwise.
                                                                </TextBlock>
                                                            </Label.ToolTip>
                                                        </Label>

                                                        <ui:TextBox Text="{Binding Configuration.DrawingConfig.DrawingDirection, Converter={StaticResource NullableIntConverter}}"
                                                                    Grid.Row="0" Grid.Column="1"
                                                                    ClearButtonEnabled="True"
                                                                    IsEnabled="{Binding UsingGCodePlot}" />
                                                        <Label Content="°"
                                                               Grid.Row="0" Grid.Column="1"
                                                               Margin="-50,0,0,0" Padding="1,2,10,0" HorizontalAlignment="Right"
                                                               VerticalAlignment="Center"
                                                               Foreground="{StaticResource ControlFillColorSecondaryBrush}" />

                                                        <Label Content="Optimisation Timeout"
                                                               Grid.Row="2"
                                                               Margin="0,0,20,0" Padding="1,2,0,0" VerticalAlignment="Center"
                                                               IsEnabled="{Binding UsingGCodePlot}" >
                                                            <Label.ToolTip>
                                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                                    How long to allow GCodePlot to spend optimising travel paths and drawing directions. 
                                                                </TextBlock>
                                                            </Label.ToolTip>
                                                        </Label>
                                                        <ui:TextBox Text="{Binding Configuration.OptimisationTimeout}"
                                                                    Grid.Row="2" Grid.Column="1"
                                                                    ClearButtonEnabled="False"
                                                                    IsEnabled="{Binding UsingGCodePlot}" />
                                                        <Label Content="sec"
                                                               Grid.Row="2" Grid.Column="1"
                                                               Margin="-50,0,0,0" Padding="1,2,10,0" HorizontalAlignment="Right"
                                                               VerticalAlignment="Center"
                                                               Foreground="{StaticResource ControlFillColorSecondaryBrush}" />

                                                        <CheckBox x:Name="keepOutlines"
                                                                  Content="Keep Outlines"
                                                                  Grid.Row="4"
                                                                  IsChecked="{Binding Configuration.DrawingConfig.KeepOutlines, Mode=TwoWay}"
                                                                  IsEnabled="{Binding UsingGCodePlot, Converter={StaticResource InverseBoolConverter}}" >
                                                            <CheckBox.ToolTip>
                                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                                    Whether shape outlines should be drawn, or ignored.<LineBreak/><LineBreak/>Disable this if you want to shade in an area without the area being outlined. 
                                                                </TextBlock>
                                                            </CheckBox.ToolTip>
                                                        </CheckBox>


                                                    </Grid>

                                                </StackPanel>
                                            </ui:CardExpander>
                                            <Separator Visibility="{Binding ElementName=modeDraw, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />

                                            <ui:CardExpander Margin="-15,0"
                                                             Background="Transparent" BorderBrush="Transparent" ContentPadding="0"
                                                             FlowDirection="RightToLeft" IsExpanded="True"
                                                             Style="{StaticResource CustomCardExpanderStyle}"
                                                             Visibility="{Binding ElementName=modeDraw, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <ui:CardExpander.Header>
                                                    <Label Content="Shading Settings"
                                                           Margin="10,0"
                                                           FlowDirection="LeftToRight" />

                                                </ui:CardExpander.Header>

                                                <StackPanel Margin="15,-10,15,10" FlowDirection="LeftToRight">
                                                    <Grid Margin="0,10,0,0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="200" />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition />
                                                            <RowDefinition Height="5" />
                                                            <RowDefinition />
                                                            <RowDefinition Height="5" />
                                                            <RowDefinition />
                                                            <RowDefinition Height="5" />
                                                            <RowDefinition />
                                                            <RowDefinition Height="5" />
                                                            <RowDefinition />
                                                            <RowDefinition Height="5" />
                                                            <RowDefinition />
                                                        </Grid.RowDefinitions>
                                                        <CheckBox Content="Enable Crosshatching" IsChecked="{Binding Configuration.DrawingConfig.CrossHatch, Mode=TwoWay}" >
                                                            <CheckBox.ToolTip>
                                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                                    Add a second shading pass at 90° to the first, creating a cross-hatch pattern.
                                                                </TextBlock>
                                                            </CheckBox.ToolTip>
                                                        </CheckBox>

                                                        <Label Content="Shading Threshold"
                                                               Grid.Row="2"
                                                               Margin="0,0,20,0" Padding="1,2,0,0" VerticalAlignment="Center"
                                                               IsEnabled="{Binding UsingGCodePlot}">
                                                            <Label.ToolTip>
                                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                                    Range = 0 to 1<LineBreak/><LineBreak/>How bright an object should be in order to be shaded. 0 = shade all objects, 1 = shade only fully bright objects. 
                                                                </TextBlock>
                                                            </Label.ToolTip>
                                                        </Label>
                                                        <ui:NumberBox Grid.Row="2" Grid.Column="1"
                                                                      ClearButtonEnabled="False"
                                                                      IsEnabled="{Binding UsingGCodePlot}"
                                                                      LargeChange="0.1" MaxDecimalPlaces="3" Maximum="1.0" Minimum="0.0" SmallChange="0.05"
                                                                      Value="{Binding Configuration.DrawingConfig.ShadingThreshold}" />

                                                        <Label Content="Lightest shading spacing"
                                                               Grid.Row="4"
                                                               Margin="0,0,20,0" Padding="1,2,0,0" VerticalAlignment="Center">
                                                            <Label.ToolTip>
                                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                                    How far apart drawn lines should be when shading the lightest parts of the image.
                                                                </TextBlock>
                                                            </Label.ToolTip>
                                                        </Label>
                                                        <ui:TextBox Text="{Binding Configuration.DrawingConfig.MaxStrokeWidth}"
                                                                    Grid.Row="4" Grid.Column="1"
                                                                    ClearButtonEnabled="False"
                                                                    IsEnabled="{Binding UsingGCodePlot}" />
                                                        <Label Content="mm"
                                                               Grid.Row="4" Grid.Column="1"
                                                               Margin="-50,0,0,0" Padding="1,2,10,0" HorizontalAlignment="Right"
                                                               VerticalAlignment="Center"
                                                               Foreground="{StaticResource ControlFillColorSecondaryBrush}" />

                                                        <Label Content="Darkest shading spacing"
                                                               Grid.Row="6"
                                                               Margin="0,0,20,0" Padding="1,2,0,0" VerticalAlignment="Center">
                                                            <Label.ToolTip>
                                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                                    How far apart drawn lines should be when shading the darkest parts of the image.
                                                                </TextBlock>
                                                            </Label.ToolTip>
                                                        </Label>
                                                        <ui:TextBox Text="{Binding Configuration.DrawingConfig.MinStrokeWidth}"
                                                                    Grid.Row="6" Grid.Column="1"
                                                                    ClearButtonEnabled="False" />
                                                        <Label Content="mm"
                                                               Grid.Row="6" Grid.Column="1"
                                                               Margin="-50,0,0,0" Padding="1,2,10,0" HorizontalAlignment="Right"
                                                               VerticalAlignment="Center"
                                                               Foreground="{StaticResource ControlFillColorSecondaryBrush}" />

                                                        <Label Content="Shading angle"
                                                               Grid.Row="8"
                                                               Margin="0,0,20,0" Padding="1,2,0,0" VerticalAlignment="Center">
                                                            <Label.ToolTip>
                                                                <TextBlock TextWrapping="Wrap" TextAlignment="Left">
                                                                    Which Direction to draw when shading objects.<LineBreak/><LineBreak/>0° represents East, with positive values rotating counterclockwise.
                                                                </TextBlock>
                                                            </Label.ToolTip>
                                                        </Label>
                                                        <ui:TextBox Text="{Binding Configuration.DrawingConfig.ShadingAngle}"
                                                                    Grid.Row="8" Grid.Column="1"
                                                                    ClearButtonEnabled="False" />
                                                        <Label Content="°"
                                                               Grid.Row="8" Grid.Column="1"
                                                               Margin="-50,0,0,0" Padding="1,2,10,0" HorizontalAlignment="Right"
                                                               VerticalAlignment="Center"
                                                               Foreground="{StaticResource ControlFillColorSecondaryBrush}" />

                                                    </Grid>
                                                </StackPanel>
                                            </ui:CardExpander>

                                        </StackPanel>

                                    </StackPanel>

                                </DockPanel>
                            </ScrollViewer>
                        </Grid>
                    </TabItem>
                </TabControl>
                <Separator Grid.Row="1"
                           Margin="0" VerticalAlignment="Top"
                           Visibility="Collapsed" />
                <StackPanel Grid.Row="1"
                            Margin="-15,0,-15,-15" HorizontalAlignment="Center"
                            Orientation="Horizontal" Visibility="Collapsed">
                    <RadioButton Width="35" Height="30"
                                 Margin="5,0" Padding="5"
                                 Style="{StaticResource MyRadioButtonStyle}">
                        <ui:SymbolIcon Filled="True" Symbol="Cursor24" />
                    </RadioButton>
                    <Separator Margin="5" />
                    <RadioButton Width="35" Height="30"
                                 Margin="5,0" Padding="5"
                                 Style="{StaticResource MyRadioButtonStyle}">
                        <ui:SymbolIcon Filled="True" Symbol="Line20" />
                    </RadioButton>
                    <RadioButton Width="35" Height="30"
                                 Margin="5,0" Padding="5"
                                 Style="{StaticResource MyRadioButtonStyle}">
                        <ui:SymbolIcon Symbol="RectangleLandscape12" />
                    </RadioButton>
                    <RadioButton Width="35" Height="30"
                                 Margin="5,0" Padding="5"
                                 Style="{StaticResource MyRadioButtonStyle}">
                        <ui:SymbolIcon Symbol="Circle12" />
                    </RadioButton>
                    <RadioButton Width="35" Height="30"
                                 Margin="5,0" Padding="5"
                                 Style="{StaticResource MyRadioButtonStyle}">
                        <ui:SymbolIcon Symbol="Text12" />
                    </RadioButton>
                </StackPanel>
            </Grid>





        </ui:Card>

    </Grid>

</Page>
